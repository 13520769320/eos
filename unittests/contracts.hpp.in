#pragma once
#include <eosio/testing/tester.hpp>

namespace eosio { namespace testing {

struct contracts {
   static std::vector<uint8_t> eosio_bios_wasm() { return read_wasm("${CMAKE_BINARY_DIR}/unittests/contracts/eosio.bios.wasm"); }
   static std::vector<char>    eosio_bios_abi() { return read_abi("${CMAKE_BINARY_DIR}/unittests/contracts/eosio.bios.abi"); }
   
   static std::vector<uint8_t> payloadless_wasm() { return read_wasm("${CMAKE_BINARY_DIR}/contracts/payloadless/payloadless.wasm"); }
   static std::vector<char> payloadless_abi() { return read_abi("${CMAKE_BINARY_DIR}/contracts/payloadless/payloadless.abi"); }
};
}} //ns eosio::testing
