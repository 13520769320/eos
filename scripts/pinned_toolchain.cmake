set(OPT_PATH @)
set(CMAKE_C_COMPILER_WORKS 1)
set(CMAKE_CXX_COMPILER_WORKS 1)
set(CMAKE_C_COMPILER ${OPT_PATH}/clang8/bin/clang)
set(CMAKE_CXX_COMPILER ${OPT_PATH}/clang8/bin/clang++)

#set(CMAKE_CXX_STANDARD_INCLUDE_DIRECTORIES ${OPT_PATH}/gcc/include/c++/7.1.0 ${OPT_PATH}/gcc/include/c++/7.1.0/x86_64-pc-linux-gnu)
set(CMAKE_CXX_STANDARD_INCLUDE_DIRECTORIES ${OPT_PATH}/clang8/include/c++/v1 /usr/local/include /usr/include)
set(CMAKE_CXX_FLAGS_INIT "-nostdinc++")
set(CMAKE_EXE_LINKER_FLAGS_INIT "-stdlib=libc++ -nostdlib++")

if(NOT APPLE)
   set(CMAKE_SHARED_LINKER_FLAGS_INIT "-stdlib=libc++ -nostdlib++")
   set(CMAKE_MODULE_LINKER_FLAGS_INIT "-stdlib=libc++ -nostdlib++")
   set(CMAKE_CXX_STANDARD_LIBRARIES "-stdlib=libc++ -nostdlib++ ${OPT_PATH}/clang8/lib/libc++.a ${OPT_PATH}/clang8/lib/libc++abi.a")
   #set(CMAKE_CXX_STANDARD_LIBRARIES "${OPT_PATH}/gcc/lib64/libstdc++.a ${OPT_PATH}/gcc/lib64/libsupc++.a")
   #set(CMAKE_CXX_STANDARD_LIBRARIES "-static -Wl,-L${OPT_PATH}/gcc/lib64 -Wl,-Bstatic -lstdc++ -Wl,-Bdynamic -lz  -Wl,-Bdynamic, -lpthread -Wl,-Bdynamic -lm -Wl,-Bdynamic -lc -Wl,-Bdynamic -lgcc -Wl,-nostdlib -Wl,--no-whole-archive ${OPT_PATH}/gcc/lib64/libstdc++.a -Wl,--no-whole-archive ${OPT_PATH}/gcc/lib64/libsupc++.a -Wl,-Bdynamic -lpthread")
else()
   set(CMAKE_SHARED_LINKER_FLAGS_INIT "-stdlib=libc++ -nostdlib++")
   set(CMAKE_MODULE_LINKER_FLAGS_INIT "-stdlib=libc++ -nostdlib++")
   set(CMAKE_CXX_STANDARD_LIBRARIES "${OPT_PATH}/clang8/lib/libc++.a ${OPT_PATH}/clang8/lib/libc++abi.a")
endif()
